using Microsoft.AspNetCore.Http;
using System;
using System.Linq;
using SistemaContable.Data;
using Microsoft.Extensions.Logging;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;

namespace SistemaContable.Services
{
    public class EmpresaService : IEmpresaService
    {
        private readonly IHttpContextAccessor _httpContextAccessor;
        private readonly ApplicationDbContext _context;
        private readonly ILogger<EmpresaService> _logger;

        public EmpresaService(
            IHttpContextAccessor httpContextAccessor, 
            ApplicationDbContext context,
            ILogger<EmpresaService> logger)
        {
            _httpContextAccessor = httpContextAccessor;
            _context = context;
            _logger = logger;
        }

        public async Task<int> ObtenerEmpresaActualId()
        {
            try
            {
                // Intenta obtener el ID de empresa de la sesión
                if (_httpContextAccessor.HttpContext?.Session != null)
                {
                    var empresaId = _httpContextAccessor.HttpContext.Session.GetInt32("EmpresaId");
                    if (empresaId.HasValue && empresaId.Value > 0)
                    {
                        _logger.LogInformation($"Empresa obtenida de sesión: {empresaId.Value}");
                        return empresaId.Value;
                    }
                }
            }
            catch (Exception ex)
            {
                _logger.LogWarning(ex, "Error al obtener empresa de sesión. Usando valor por defecto.");
            }
            
            // Si no se pudo obtener de la sesión, busca en la base de datos
            try
            {
                // Verifica si existe al menos una empresa
                var empresa = await _context.Empresas.FirstOrDefaultAsync();
                
                // Si hay al menos una empresa, devuelve su ID
                if (empresa != null)
                {
                    _logger.LogInformation($"Empresa obtenida de base de datos: {empresa.Id}");
                    
                    // Guardar en sesión para futuros accesos
                    if (_httpContextAccessor.HttpContext?.Session != null)
                    {
                        _httpContextAccessor.HttpContext.Session.SetInt32("EmpresaId", empresa.Id);
                    }
                    
                    return empresa.Id;
                }
            }
            catch (Exception ex)
            {
                _logger.LogWarning(ex, "Error al obtener empresa de base de datos. Usando valor por defecto.");
            }
            
            // Si no hay empresas o hubo un error, devuelve 1 (valor predeterminado)
            _logger.LogWarning("No se encontró ninguna empresa, usando valor predeterminado: 1");
            return 1;
        }
    }
}