@model SistemaContable.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Iniciar Sesión";
    Layout = null; // Sin layout para pantalla completa
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Sistema Contable Aurora</title>
    
    <!-- Google Fonts - Poppins -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    
    <style>
        :root {
            --aurora-primary: #020710;
            --aurora-secondary: #0a2463;
            --aurora-accent: #3e92cc;
            --aurora-light: #d8e1e9;
            --aurora-success: #2ecc71;
            --aurora-danger: #e74c3c;
            --aurora-gray-100: #f8f9fa;
            --aurora-gray-300: #dee2e6;
            --aurora-gray-600: #6c757d;
            --aurora-gray-800: #343a40;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: #ffffff;
            min-height: 100vh;
            margin: 0;
            padding: 0;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .login-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .login-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            border: 1px solid var(--aurora-gray-300);
            padding: 1.8rem 1.5rem;
            width: 100%;
            max-width: 380px;
            position: relative;
            overflow: hidden;
        }

        .login-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, var(--aurora-accent), var(--aurora-success));
        }

        .logo-container {
            text-align: center;
            margin-bottom: 2rem;
            padding: 0.5rem;
        }

        .logo {
            max-height: 90px;
            max-width: 200px;
            width: auto;
            height: auto;
            margin-bottom: 1rem;
            display: block;
            margin-left: auto;
            margin-right: auto;
            filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.15));
            transition: all 0.3s ease;
            object-fit: contain;
            opacity: 1;
        }

        .logo:hover {
            transform: scale(1.02);
            filter: drop-shadow(0 6px 12px rgba(0, 0, 0, 0.2));
        }


        /* Fallback si el logo no carga */
        .logo-fallback {
            display: none;
            width: 90px;
            height: 90px;
            background: linear-gradient(135deg, var(--aurora-accent), var(--aurora-secondary));
            border-radius: 20px;
            margin: 0 auto 1rem;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 2.5rem;
            font-weight: bold;
            box-shadow: 0 4px 15px rgba(62, 146, 204, 0.3);
            transition: all 0.3s ease;
        }

        .logo-fallback:hover {
            transform: scale(1.02);
            box-shadow: 0 6px 20px rgba(62, 146, 204, 0.4);
        }

        .form-group {
            margin-bottom: 0.9rem;
        }

        .form-label {
            color: var(--aurora-gray-800);
            font-weight: 500;
            margin-bottom: 0.3rem;
            font-size: 0.8rem;
        }

        .form-control {
            border: 2px solid var(--aurora-gray-300);
            border-radius: 6px;
            padding: 0.525rem 0.6rem;
            font-size: 0.85rem;
            transition: all 0.3s ease;
            background-color: var(--aurora-gray-100);
        }

        .form-control:focus {
            border-color: var(--aurora-accent);
            box-shadow: 0 0 0 0.2rem rgba(62, 146, 204, 0.15);
            background-color: white;
        }

        .form-control::placeholder {
            color: var(--aurora-gray-600);
            font-size: 0.8rem;
        }

        .forgot-password {
            text-align: right;
            margin-top: 0.3rem;
        }

        .forgot-password a {
            color: var(--aurora-accent);
            text-decoration: none;
            font-size: 0.75rem;
            font-weight: 500;
        }

        .forgot-password a:hover {
            text-decoration: underline;
        }

        .btn-login {
            background: linear-gradient(135deg, var(--aurora-accent) 0%, var(--aurora-secondary) 100%);
            border: none;
            border-radius: 6px;
            color: white;
            font-weight: 600;
            padding: 0.525rem 0.6rem;
            font-size: 0.85rem;
            width: 100%;
            transition: all 0.3s ease;
            margin-top: 0.6rem;
        }

        .btn-login:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(62, 146, 204, 0.3);
            color: white;
        }

        .btn-login:active {
            transform: translateY(0);
        }

        .system-status {
            background-color: #d4edda;
            border: 1px solid #c3e6cb;
            border-radius: 6px;
            padding: 0.45rem 0.6rem;
            margin-top: 0.9rem;
            display: flex;
            align-items: center;
            font-size: 0.75rem;
        }

        .system-status .status-icon {
            color: var(--aurora-success);
            margin-right: 0.5rem;
            font-size: 1rem;
        }

        .system-status .status-text {
            color: #155724;
            font-weight: 500;
            flex: 1;
        }

        .system-status .status-link {
            color: var(--aurora-accent);
            text-decoration: none;
            font-weight: 500;
        }

        .system-status .status-link:hover {
            text-decoration: underline;
        }

        .footer-text {
            text-align: center;
            margin-top: 1.2rem;
            color: var(--aurora-gray-600);
            font-size: 0.75rem;
        }

        .footer-text a {
            color: var(--aurora-accent);
            text-decoration: none;
            font-weight: 500;
        }

        .footer-text a:hover {
            text-decoration: underline;
        }

        /* Responsive */
        @@media (max-width: 576px) {
            .login-card {
                padding: 1.2rem 0.9rem;
                margin: 0.6rem;
            }
            
            .logo-text {
                font-size: 0.9rem;
            }
        }

        /* Loading animation */
        .btn-login.loading {
            pointer-events: none;
            position: relative;
        }

        .btn-login.loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }

        .btn-login.loading span {
            opacity: 0;
        }

        /* Validación de errores */
        .alert {
            border-radius: 8px;
            margin-bottom: 1.5rem;
            border: none;
            font-size: 0.875rem;
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
            border-left: 4px solid var(--aurora-danger);
        }

        .text-danger {
            color: var(--aurora-danger) !important;
            font-size: 0.8rem;
            margin-top: 0.25rem;
            display: block;
        }

        .form-control.input-validation-error {
            border-color: var(--aurora-danger);
            box-shadow: 0 0 0 0.2rem rgba(231, 76, 60, 0.15);
        }

        /* Password Toggle */
        .password-input-container {
            position: relative;
        }

        .password-toggle {
            position: absolute;
            right: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--aurora-gray-600);
            cursor: pointer;
            padding: 0;
            font-size: 0.9rem;
            transition: color 0.3s ease;
        }

        .password-toggle:hover {
            color: var(--aurora-accent);
        }

        .password-toggle:focus {
            outline: none;
            color: var(--aurora-accent);
        }
    </style>
</head>

<body>
    <div class="login-container">
        <div class="login-card">
            <div class="logo-container">
                <img src="~/images/logo.png" alt="Aurora Logo" class="logo" id="mainLogo" />
                <div class="logo-fallback" id="logoFallback">
                    <i class="fas fa-chart-line"></i>
                </div>
            </div>

            <form id="loginForm" asp-controller="Auth" asp-action="Login" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="ReturnUrl" value="@ViewData["ReturnUrl"]" />
                
                <!-- Mostrar errores de validación -->
                @if (ViewData.ModelState.ErrorCount > 0)
                {
                    <div class="alert alert-danger" role="alert">
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <div>@error.ErrorMessage</div>
                        }
                    </div>
                }

                <div class="form-group">
                    <label asp-for="LoginIdentifier" class="form-label">Usuario</label>
                    <input asp-for="LoginIdentifier" class="form-control" 
                           placeholder="Ingrese su usuario o correo electrónico" />
                    <span asp-validation-for="LoginIdentifier" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Password" class="form-label">Contraseña</label>
                    <div class="password-input-container">
                        <input asp-for="Password" type="password" class="form-control" id="passwordInput"
                               placeholder="Ingrese su contraseña" />
                        <button type="button" class="password-toggle" id="passwordToggle" title="Mostrar/Ocultar contraseña">
                            <i class="fas fa-eye" id="passwordToggleIcon"></i>
                        </button>
                    </div>
                    <span asp-validation-for="Password" class="text-danger"></span>
                    <div class="forgot-password">
                        <a href="#" onclick="alert('Funcionalidad en desarrollo')">¿Olvidaste tu contraseña?</a>
                    </div>
                </div>

                <button type="submit" class="btn btn-login" id="loginBtn">
                    <span>Iniciar Sesión</span>
                </button>
            </form>

            <div class="system-status">
                <i class="fas fa-check-circle status-icon"></i>
                <span class="status-text">Todos los sistemas operacionales</span>
                <a href="#" class="status-link" onclick="alert('Estado del sistema: OK')">Estado del sistema</a>
            </div>

            <div class="footer-text">
                ¿No tienes una cuenta? <a href="#" onclick="alert('Contacte al administrador')">Contáctanos</a>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Manejo del logo y fallback - versión simplificada
        document.addEventListener('DOMContentLoaded', function() {
            const mainLogo = document.getElementById('mainLogo');
            const logoFallback = document.getElementById('logoFallback');
            
            // Si el logo no carga, mostrar fallback
            mainLogo.onerror = function() {
                console.log('Logo no pudo cargar, mostrando fallback');
                mainLogo.style.display = 'none';
                logoFallback.style.display = 'flex';
            };
            
            // El logo se muestra inmediatamente, sin efectos de carga
            console.log('Logo inicializado correctamente');
        });

        document.getElementById('loginForm').addEventListener('submit', function(e) {
            const btn = document.getElementById('loginBtn');
            btn.classList.add('loading');
            
            // No prevenir el envío, dejar que ASP.NET Core maneje el form
            // Solo agregar el efecto visual de loading
        });

        // Password toggle functionality
        const passwordInput = document.getElementById('passwordInput');
        const passwordToggle = document.getElementById('passwordToggle');
        const passwordToggleIcon = document.getElementById('passwordToggleIcon');

        passwordToggle.addEventListener('click', function() {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            
            // Toggle icon
            if (type === 'password') {
                passwordToggleIcon.classList.remove('fa-eye-slash');
                passwordToggleIcon.classList.add('fa-eye');
                passwordToggle.setAttribute('title', 'Mostrar contraseña');
            } else {
                passwordToggleIcon.classList.remove('fa-eye');
                passwordToggleIcon.classList.add('fa-eye-slash');
                passwordToggle.setAttribute('title', 'Ocultar contraseña');
            }
        });

        // Efecto de focus en los inputs
        document.querySelectorAll('.form-control').forEach(input => {
            input.addEventListener('focus', function() {
                const container = this.closest('.form-group');
                if (container) container.classList.add('focused');
            });
            
            input.addEventListener('blur', function() {
                if (!this.value) {
                    const container = this.closest('.form-group');
                    if (container) container.classList.remove('focused');
                }
            });
        });
    </script>
</body>
</html>