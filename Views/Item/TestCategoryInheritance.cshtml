@{
    ViewData["Title"] = "Test Category Inheritance";
}

<div class="container mt-4">
    <h2>Test Category Inheritance</h2>
    
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">1. Select Category</div>
                <div class="card-body">
                    <select id="CategoriaId" class="form-select">
                        <option value="">Select a category</option>
                    </select>
                    <button class="btn btn-info mt-2" onclick="checkCategoryData()">Check Data</button>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">2. Inherited Fields</div>
                <div class="card-body">
                    <div class="mb-2">
                        <label>Tax:</label>
                        <select id="ImpuestoId" class="form-select">
                            <option value="">--</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label>Sales Account:</label>
                        <select id="CuentaVentasId" class="form-select select2-cuenta">
                            <option value="">--</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label>Purchases Account:</label>
                        <select id="CuentaComprasInventariosId" class="form-select select2-cuenta">
                            <option value="">--</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">Debug Output</div>
                <div class="card-body">
                    <pre id="debugOutput" style="height: 300px; overflow-y: auto; background: #f4f4f4; padding: 10px;"></pre>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        const debug = function(...args) {
            console.log(...args);
            const output = document.getElementById('debugOutput');
            const time = new Date().toLocaleTimeString();
            output.innerHTML += `[${time}] ${args.join(' ')}\n`;
            output.scrollTop = output.scrollHeight;
        };
        
        $(document).ready(function() {
            debug("Initializing test page...");
            
            // Initialize category select
            $('#CategoriaId').select2({
                theme: 'bootstrap-5',
                placeholder: 'Select a category',
                width: '100%',
                ajax: {
                    url: '/Categoria/Buscar',
                    dataType: 'json',
                    delay: 250,
                    data: function(params) {
                        return { term: params.term || '' };
                    }
                }
            });
            
            // Initialize tax select
            $('#ImpuestoId').select2({
                theme: 'bootstrap-5',
                placeholder: 'Tax will inherit from category',
                width: '100%'
            });
            
            // Initialize accounting selects
            $('.select2-cuenta').each(function() {
                $(this).select2({
                    theme: 'bootstrap-5',
                    placeholder: 'Account will inherit from category',
                    width: '100%',
                    ajax: {
                        url: '/api/CuentasContables/Buscar',
                        dataType: 'json',
                        delay: 250,
                        data: function(params) {
                            return { term: params.term || '' };
                        },
                        processResults: function(data) {
                            return data;
                        }
                    }
                });
            });
            
            // Listen for category changes
            $('#CategoriaId').on('change', function() {
                const categoriaId = $(this).val();
                debug(`Category changed to: ${categoriaId}`);
                
                if (!categoriaId) return;
                
                // Clear fields first
                $('#ImpuestoId').val(null).trigger('change');
                $('#CuentaVentasId').val(null).trigger('change');
                $('#CuentaComprasInventariosId').val(null).trigger('change');
                
                // Get category data
                debug("Fetching category data...");
                $.ajax({
                    url: `/Categoria/ObtenerDatos/${categoriaId}`,
                    type: 'GET',
                    success: function(response) {
                        debug("Response received:", JSON.stringify(response, null, 2));
                        
                        if (response.success) {
                            // Update tax
                            if (response.impuestoId) {
                                debug(`Setting tax to: ${response.impuestoId}`);
                                $('#ImpuestoId').val(response.impuestoId).trigger('change');
                            }
                            
                            // Update accounts with loading
                            if (response.cuentaVentaId) {
                                debug(`Loading sales account: ${response.cuentaVentaId}`);
                                loadAccount('#CuentaVentasId', response.cuentaVentaId);
                            }
                            
                            if (response.cuentaCompraId) {
                                debug(`Loading purchases account: ${response.cuentaCompraId}`);
                                loadAccount('#CuentaComprasInventariosId', response.cuentaCompraId);
                            }
                        }
                    },
                    error: function(xhr, status, error) {
                        debug(`Error: ${error}`);
                        debug(`Status: ${xhr.status}`);
                        debug(`Response: ${xhr.responseText}`);
                    }
                });
            });
        });
        
        function loadAccount(selector, accountId) {
            const $select = $(selector);
            
            // Add loading option
            const loadingOption = new Option('Loading...', accountId, true, true);
            $select.append(loadingOption);
            $select.val(accountId).trigger('change');
            
            // Load actual data
            $.ajax({
                url: '/api/CuentasContables/Buscar',
                type: 'GET',
                data: { term: accountId },
                success: function(data) {
                    debug(`Account data for ${accountId}:`, JSON.stringify(data, null, 2));
                    
                    // Remove loading option
                    $select.find(`option[value="${accountId}"]`).remove();
                    
                    // Find the account data
                    if (data.results && data.results.length > 0) {
                        const account = data.results.find(a => a.id == accountId);
                        if (account) {
                            const newOption = new Option(account.text, account.id, true, true);
                            $select.append(newOption);
                            $select.val(accountId).trigger('change');
                            debug(`Set ${selector} to: ${account.text}`);
                        }
                    }
                },
                error: function(xhr, status, error) {
                    debug(`Error loading account ${accountId}: ${error}`);
                    debug(`Response: ${xhr.responseText}`);
                    
                    // Try to parse error
                    try {
                        const errorData = JSON.parse(xhr.responseText);
                        debug(`Error details: ${errorData.error}`);
                        if (errorData.details) {
                            debug(`Stack: ${errorData.details}`);
                        }
                    } catch (e) {
                        debug(`Could not parse error response`);
                    }
                }
            });
        }
        
        function checkCategoryData() {
            const categoryId = $('#CategoriaId').val();
            if (!categoryId) {
                debug("No category selected");
                return;
            }
            
            $.ajax({
                url: `/Categoria/ObtenerDatos/${categoryId}`,
                type: 'GET',
                success: function(response) {
                    debug("Category data:", JSON.stringify(response, null, 2));
                }
            });
        }
    </script>
}