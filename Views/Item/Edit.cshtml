@model SistemaContable.Models.ViewModels.ItemViewModel
@{
    ViewData["Title"] = "Editar Item";
}

<div class="container-fluid p-0">
    <!-- Sección de encabezado con título y breadcrumb -->
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="h4">Editar Item</h1>
            <nav class="breadcrumb-container d-none d-sm-block d-lg-inline-block" aria-label="breadcrumb">
                <ol class="breadcrumb pt-0">
                    <li class="breadcrumb-item">
                        <a asp-controller="Home" asp-action="Index">Dashboard</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a asp-action="Index">Items</a>
                    </li>
                    <li class="breadcrumb-item active">Editar</li>
                </ol>
            </nav>
        </div>
    </div>

    <form asp-action="Edit" method="post" enctype="multipart/form-data" id="itemForm">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />

        <!-- Nav tabs con estilo Underline -->
        <div class="card mb-4">
            <div class="card-body">
                <ul class="nav nav-tabs-underline" role="tablist">
                    <li class="nav-item" role="presentation">
                        <a class="nav-link active" href="#tab-info" role="tab" data-bs-toggle="tab">
                            Información
                        </a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" href="#tab-compras" role="tab" data-bs-toggle="tab">
                            Compras
                        </a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" href="#tab-contabilidad" role="tab" data-bs-toggle="tab">
                            Contabilidad
                        </a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" href="#tab-taras" role="tab" data-bs-toggle="tab">
                            Taras
                        </a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" href="#tab-venta" role="tab" data-bs-toggle="tab">
                            Producto de Venta
                        </a>
                    </li>
                </ul>

                <!-- Tab content - Igual que en Create pero con datos precargados -->
                <div class="tab-content mt-4">
                    <!-- Tab Información -->
                    <div class="tab-pane fade show active" id="tab-info" role="tabpanel">
                        <div class="row">
                            <div class="col-md-8">
                                <!-- Campos iguales a Create.cshtml con valores del modelo -->
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label asp-for="Codigo" class="form-label">Código</label>
                                        <input asp-for="Codigo" class="form-control" />
                                        <span asp-validation-for="Codigo" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="CodigoBarras" class="form-label">Código de Barras</label>
                                        <div class="input-group">
                                            <input asp-for="CodigoBarras" class="form-control" />
                                            <button type="button" class="btn btn-outline-secondary" id="generarCodigoBarras">
                                                <i class="fas fa-barcode"></i>
                                            </button>
                                            <button type="button" class="btn btn-outline-info" id="imprimirCodigoBarras" @(string.IsNullOrEmpty(Model.CodigoBarras) ? "disabled" : "")>
                                                <i class="fas fa-print"></i>
                                            </button>
                                        </div>
                                        <div id="codigoBarrasPreview" class="mt-2 text-center" style="@(string.IsNullOrEmpty(Model.CodigoBarras) ? "display: none;" : "")">
                                            <svg id="barcode"></svg>
                                        </div>
                                        <span asp-validation-for="CodigoBarras" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-12">
                                        <label asp-for="Nombre" class="form-label">Nombre *</label>
                                        <input asp-for="Nombre" class="form-control" required />
                                        <span asp-validation-for="Nombre" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label asp-for="CategoriaId" class="form-label">Categoría *</label>
                                        <select asp-for="CategoriaId" asp-items="Model.CategoriasDisponibles" class="form-select select2-categoria" required>
                                            <option value="">Seleccione una categoría</option>
                                        </select>
                                        <span asp-validation-for="CategoriaId" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="MarcaId" class="form-label">Marca</label>
                                        <select asp-for="MarcaId" asp-items="Model.MarcasDisponibles" class="form-select select2-marca">
                                            <option value="">Genérica</option>
                                        </select>
                                        <span asp-validation-for="MarcaId" class="text-danger"></span>
                                    </div>
                                </div>
                                <!-- Resto de campos igual que en Create.cshtml -->
                                <div class="row mb-3">
                                    <div class="col-md-12">
                                        <label asp-for="Descripcion" class="form-label">Descripción</label>
                                        <textarea asp-for="Descripcion" class="form-control" rows="3"></textarea>
                                        <span asp-validation-for="Descripcion" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label asp-for="ImpuestoId" class="form-label">Impuesto</label>
                                        <select asp-for="ImpuestoId" asp-items="Model.ImpuestosDisponibles" class="form-select select2">
                                            <option value="">Seleccione un impuesto</option>
                                        </select>
                                        <span asp-validation-for="ImpuestoId" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="Rendimiento" class="form-label">Rendimiento (%)</label>
                                        <input asp-for="Rendimiento" class="form-control" type="number" step="0.01" min="0" max="100" data-decimal="@Model.SeparadorDecimal" />
                                        <small class="text-muted">Porcentaje del producto que se mantiene después de procesarlo</small>
                                        <span asp-validation-for="Rendimiento" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label asp-for="Estado" class="form-label">Estado</label>
                                        <select asp-for="Estado" class="form-select">
                                            <option value="true">Activo</option>
                                            <option value="false">Inactivo</option>
                                        </select>
                                        <span asp-validation-for="Estado" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <!-- Imagen con previsualización si ya existe -->
                                <div class="card">
                                    <div class="card-body">
                                        <h5 class="card-title">Imagen</h5>
                                        <div class="image-upload-container">
                                            <div class="image-preview-wrapper text-center">
                                                <div id="imagePreview" class="mb-3" style="@(string.IsNullOrEmpty(Model.ImagenUrl) ? "display: none;" : "")">
                                                    <img id="preview" src="@Model.ImagenUrl" alt="Vista previa" class="img-fluid rounded shadow-sm" style="max-height: 200px;" />
                                                </div>
                                                <div id="imageDefault" class="mb-3 p-4 border rounded bg-light d-flex align-items-center justify-content-center" style="@(!string.IsNullOrEmpty(Model.ImagenUrl) ? "display: none;" : "") height: 200px;">
                                                    <div class="text-center text-muted">
                                                        <i class="fas fa-image fa-4x mb-3"></i>
                                                        <p>No hay imagen</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropzone-container mb-3 text-center">
                                                <div id="dropzone" class="dropzone-area p-3 border border-dashed rounded">
                                                    <input type="hidden" asp-for="ImagenUrl" />
                                                    <input asp-for="ItemImage" type="file" class="file-input" accept="image/*" hidden />
                                                    <div class="dropzone-message">
                                                        <i class="fas fa-cloud-upload-alt fa-2x text-primary mb-2"></i>
                                                        <p>Arrastra y suelta una imagen aquí o<br>
                                                        <button type="button" class="btn btn-sm btn-primary mt-2" id="browseButton">
                                                            Seleccionar imagen
                                                        </button></p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="upload-options d-flex justify-content-between">
                                                <button type="button" class="btn btn-outline-secondary btn-sm" id="cropButton" style="display: none;">
                                                    <i class="fas fa-crop me-1"></i> Recortar
                                                </button>
                                                <button type="button" class="btn btn-outline-danger btn-sm" id="btnResetImage" style="@(string.IsNullOrEmpty(Model.ImagenUrl) ? "display: none;" : "")">
                                                    <i class="fas fa-trash me-1"></i> Eliminar
                                                </button>
                                            </div>
                                            <div class="mt-2 text-muted small">
                                                <ul class="ps-3 mb-0">
                                                    <li>Formatos: JPG, PNG o GIF</li>
                                                    <li>Tamaño máximo: 800KB</li>
                                                    <li>Dimensiones recomendadas: 800x800px</li>
                                                </ul>
                                            </div>
                                            <span asp-validation-for="ItemImage" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Tab Compras -->
                    <div class="tab-pane fade" id="tab-compras" role="tabpanel">
                        <!-- Similar a Create.cshtml pero con datos -->
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <label asp-for="UnidadMedidaInventarioId" class="form-label">Unidad de Medida (Inventario) *</label>
                                <div class="input-group">
                                    <select asp-for="UnidadMedidaInventarioId" asp-items="Model.UnidadesMedidaDisponibles" class="form-select select2-uom" required>
                                        <option value="">Seleccione una unidad</option>
                                    </select>
                                    <button type="button" class="btn btn-outline-primary" id="btnNuevaUnidad">
                                        <i class="fas fa-plus"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="UnidadMedidaInventarioId" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label for="UnidadCompraId" class="form-label">Unidad de Compra Preferida</label>
                                <select id="UnidadCompraId" name="UnidadCompraId" class="form-select" data-contenedor-compra="@(Model.Contenedores.FirstOrDefault(c => c.EsContenedorCompra)?.Id)">
                                    <option value="">Debe agregar contenedores primero</option>
                                </select>
                                <small class="text-muted">Se habilitará después de configurar los contenedores</small>
                            </div>
                        </div>

                        <!-- Tablas con datos precargados -->
                        <!-- Unidades y Conversiones -->
                        <div class="card mb-4">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="card-title mb-0">Conversiones de Unidades</h5>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover" id="tablaContenedores">
                                        <thead class="bg-light">
                                            <tr>
                                                <th style="width: 50px;">No</th>
                                                <th>Contenedor</th>
                                                <th>Etiqueta</th>
                                                <th>Cantidad</th>
                                                <th>Costo</th>
                                                <th style="width: 50px;"></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Se cargarán dinámicamente los contenedores -->
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td colspan="6">
                                                    <button type="button" class="btn btn-sm btn-outline-primary w-100" id="btnAgregarContenedor">
                                                        <i class="fas fa-plus me-1"></i> Agregar Fila
                                                    </button>
                                                </td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <!-- Resto de secciones igual que en Create.cshtml -->
                        <!-- ... -->
                    </div>

                    <!-- Tab Contabilidad -->
                    <div class="tab-pane fade" id="tab-contabilidad" role="tabpanel">
                        <!-- Contenido de la pestaña de contabilidad -->
                        <div class="alert alert-info mb-4">
                            <i class="fas fa-info-circle me-2"></i> Las cuentas contables se heredan de la categoría seleccionada. Puede personalizarlas para este item específico.
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="CuentaVentasId" class="form-label">Cuenta de Ventas</label>
                                <select asp-for="CuentaVentasId" asp-items="Model.CuentasVentasDisponibles" class="form-select select2-cuenta">
                                    <option value="">Seleccione una cuenta</option>
                                </select>
                                <span asp-validation-for="CuentaVentasId" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="CuentaComprasInventariosId" class="form-label">Cuenta de Compras/Inventarios</label>
                                <select asp-for="CuentaComprasInventariosId" asp-items="Model.CuentasComprasInventariosDisponibles" class="form-select select2-cuenta">
                                    <option value="">Seleccione una cuenta</option>
                                </select>
                                <span asp-validation-for="CuentaComprasInventariosId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="CuentaCostoVentasGastosId" class="form-label">Cuenta de Costo de Ventas</label>
                                <select asp-for="CuentaCostoVentasGastosId" asp-items="Model.CuentasCostoVentasGastosDisponibles" class="form-select select2-cuenta">
                                    <option value="">Seleccione una cuenta</option>
                                </select>
                                <span asp-validation-for="CuentaCostoVentasGastosId" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="CuentaDescuentosId" class="form-label">Cuenta de Descuentos</label>
                                <select asp-for="CuentaDescuentosId" asp-items="Model.CuentasDescuentosDisponibles" class="form-select select2-cuenta">
                                    <option value="">Seleccione una cuenta</option>
                                </select>
                                <span asp-validation-for="CuentaDescuentosId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="CuentaDevolucionesId" class="form-label">Cuenta de Devoluciones</label>
                                <select asp-for="CuentaDevolucionesId" asp-items="Model.CuentasDevolucionesDisponibles" class="form-select select2-cuenta">
                                    <option value="">Seleccione una cuenta</option>
                                </select>
                                <span asp-validation-for="CuentaDevolucionesId" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="CuentaAjustesId" class="form-label">Cuenta de Ajustes</label>
                                <select asp-for="CuentaAjustesId" asp-items="Model.CuentasAjustesDisponibles" class="form-select select2-cuenta">
                                    <option value="">Seleccione una cuenta</option>
                                </select>
                                <span asp-validation-for="CuentaAjustesId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="CuentaCostoMateriaPrimaId" class="form-label">Cuenta de Costo de Materia Prima</label>
                                <select asp-for="CuentaCostoMateriaPrimaId" asp-items="Model.CuentasCostoMateriaPrimaDisponibles" class="form-select select2-cuenta">
                                    <option value="">Seleccione una cuenta</option>
                                </select>
                                <span asp-validation-for="CuentaCostoMateriaPrimaId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <!-- Resto de pestañas igual que en Create.cshtml -->
                    <!-- ... -->
                </div>
            </div>
        </div>

        <!-- Botones de acción -->
        <div class="card mb-4">
            <div class="card-body">
                <div class="d-flex justify-content-end gap-2">
                    <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
                    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                </div>
            </div>
        </div>
    </form>
</div>

<!-- Templates igual que en Create.cshtml -->
<!-- ... -->
<!-- Offcanvas y modales igual que en Create.cshtml -->
<!-- ... -->
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js"></script>
    <script src="~/js/items/form.js"></script>

    <script>
        $(document).ready(function() {
            // Initialize Select2 for accounting accounts with AJAX
            $('.select2-cuenta, #CuentaVentasId, #CuentaComprasInventariosId, #CuentaCostoVentasGastosId, #CuentaDescuentosId, #CuentaDevolucionesId, #CuentaAjustesId, #CuentaCostoMateriaPrimaId').each(function() {
                const $this = $(this);
                
                // Avoid initializing twice
                if (!$this.hasClass('select2-hidden-accessible')) {
                    $this.select2({
                        theme: 'bootstrap-5',
                        width: '100%',
                        placeholder: 'Buscar cuenta contable...',
                        allowClear: true,
                        minimumInputLength: 1,
                        language: {
                            inputTooShort: function() {
                                return "Ingrese al menos 1 caracter para buscar";
                            },
                            noResults: function() {
                                return "No se encontraron resultados";
                            },
                            searching: function() {
                                return "Buscando...";
                            }
                        },
                        ajax: {
                            url: '/Item/BuscarCuentasContables',
                            dataType: 'json',
                            delay: 250,
                            data: function(params) {
                                return {
                                    term: params.term || ''
                                };
                            },
                            processResults: function(data) {
                                return data;
                            },
                            cache: true
                        },
                        templateResult: formatCuenta,
                        templateSelection: formatCuentaSelection
                    });
                    console.log(`Account selector initialized with AJAX: ${$this.attr('id') || 'no ID'}`);
                }
            });

            // Format function for accounting account search results
            function formatCuenta(cuenta) {
                if (!cuenta.id) {
                    return cuenta.text;
                }
                
                var $resultado = $(
                    '<div class="select2-result">' +
                        '<span class="badge bg-secondary me-2">' + (cuenta.codigo || '') + '</span>' +
                        '<span>' + (cuenta.nombre || cuenta.text) + '</span>' +
                    '</div>'
                );
                return $resultado;
            }

            // Format function for selected accounting account
            function formatCuentaSelection(cuenta) {
                if (!cuenta.id) {
                    return cuenta.text;
                }
                return cuenta.text;
            }
            
            // For debugging: Log account fields and their values
            function debugAccountFields() {
                console.log("Debugging account fields:");
                [
                    "#CuentaVentasId", 
                    "#CuentaComprasInventariosId", 
                    "#CuentaCostoVentasGastosId", 
                    "#CuentaDescuentosId", 
                    "#CuentaDevolucionesId", 
                    "#CuentaAjustesId",
                    "#CuentaCostoMateriaPrimaId"
                ].forEach(selector => {
                    const $field = $(selector);
                    console.log(`Field ${selector}: Value=${$field.val()}, Text=${$field.find('option:selected').text()}`);
                });
            }
            
            // Log initial state
            setTimeout(debugAccountFields, 500);

            // Initialize the image upload component
            initImageUpload();

            // Inicializar JsBarcode si hay código de barras
            if ($('#CodigoBarras').val()) {
                JsBarcode("#barcode", $('#CodigoBarras').val(), {
                    format: "CODE128",
                    displayValue: true,
                    fontSize: 14,
                    height: 50,
                    margin: 10
                });
            }

            // Cargar los contenedores existentes
        @if (Model.Contenedores != null && Model.Contenedores.Any())
        {
            <text>
                    // Datos de contenedores para inicializar
                    const contenedoresExistentes = @Html.Raw(Json.Serialize(Model.Contenedores));
                    window.contenedoresDatos = contenedoresExistentes;
            </text>
        }

            // Cargar los proveedores existentes
        @if (Model.Proveedores != null && Model.Proveedores.Any())
        {
            <text>
                    // Datos de proveedores para inicializar
                    const proveedoresExistentes = @Html.Raw(Json.Serialize(Model.Proveedores));
                    window.proveedoresDatos = proveedoresExistentes;
            </text>
        }

            // Cargar los almacenes existentes
        @if (Model.Almacenes != null && Model.Almacenes.Any())
        {
            <text>
                    // Datos de almacenes para inicializar
                    const almacenesExistentes = @Html.Raw(Json.Serialize(Model.Almacenes));
                    window.almacenesDatos = almacenesExistentes;
            </text>
        }

            // Cargar las taras existentes
        @if (Model.Taras != null && Model.Taras.Any())
        {
            <text>
                    // Datos de taras para inicializar
                    const tarasExistentes = @Html.Raw(Json.Serialize(Model.Taras));
                    window.tarasDatos = tarasExistentes;
            </text>
        }

            // Cargar datos del producto de venta
        @if (Model.ProductoVenta != null)
        {
            <text>
                    // Datos de producto de venta para inicializar
                    const productoVentaExistente = @Html.Raw(Json.Serialize(Model.ProductoVenta));
                    window.productoVentaDatos = productoVentaExistente;
            </text>
        }
        });
    </script>
}