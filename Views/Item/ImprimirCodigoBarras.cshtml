@model SistemaContable.ViewModels.ImpresionCodigoBarrasViewModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Impresión de Código de Barras</title>
    <!-- Asegurarse de que JsBarcode esté disponible -->
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }
        .etiqueta {
            page-break-inside: avoid;
            float: left;
            text-align: center;
            padding: 5px;
            margin: 5px;
            border: 1px dashed #ccc;
        }
        .formato-2x2 {
            width: 1.8in;
            height: 1.8in;
        }
        .formato-2x3 {
            width: 1.8in;
            height: 2.8in;
        }
        .formato-2x4 {
            width: 1.8in;
            height: 3.8in;
        }
        .barcode-container {
            margin-top: 5px;
            display: flex;
            justify-content: center;
        }
        .nombre-item {
            font-size: 10px;
            margin-top: 5px;
            word-break: break-word;
        }
        .clearfix {
            clear: both;
        }
        @@media print {
            body {
                width: 8.5in;
                margin: 0;
            }
            .no-print {
                display: none;
            }
        }
    </style>
</head>
<body>
    <div class="no-print" style="margin: 20px; text-align: center;">
        <h2>Vista previa de impresión</h2>
        <button onclick="window.print()">Imprimir</button>
    </div>

    <div id="contenedor-etiquetas">
        @for (int i = 0; i < Model.Cantidad; i++)
        {
            <div class="etiqueta formato-@Model.Formato">
                <div class="barcode-container">
                    <svg id="barcode-@i" class="barcode"></svg>
                </div>
                <div class="nombre-item">@Model.Nombre</div>
            </div>
        }
        <div class="clearfix"></div>
    </div>

    <script>
        // Función para verificar si una biblioteca está cargada
        function isLibraryLoaded(libraryName) {
            return typeof window[libraryName] !== 'undefined';
        }

        // Función para cargar JsBarcode si no está disponible
        function loadJsBarcode(callback) {
            if (isLibraryLoaded('JsBarcode')) {
                callback();
                return;
            }
            
            var script = document.createElement('script');
            script.src = 'https://cdn.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js';
            script.onload = callback;
            document.head.appendChild(script);
        }

        // Generar códigos de barras cuando el documento esté listo
        document.addEventListener('DOMContentLoaded', function() {
            loadJsBarcode(function() {
                console.log('JsBarcode cargado y listo para usar');
                
                // Obtener el código de barras del modelo
                var codigoBarras = '@Model.CodigoBarras';
                console.log('Código de barras a imprimir:', codigoBarras);
                
                // Generar todos los códigos de barras
                var barcodes = document.querySelectorAll('.barcode');
                barcodes.forEach(function(barcodeElement, index) {
                    console.log('Generando código de barras:', index);
                    try {
                        JsBarcode(barcodeElement, codigoBarras, {
                            format: "CODE128",
                            displayValue: true,
                            fontSize: 12,
                            margin: 5,
                            height: 50,
                            width: 1
                        });
                        console.log('Código de barras generado correctamente');
                    } catch (error) {
                        console.error('Error al generar código de barras:', error);
                        barcodeElement.insertAdjacentHTML('afterend', 
                            '<div style="color:red">Error: ' + error.message + '</div>');
                    }
                });
                
                // Auto imprimir después de un breve retraso para asegurar que los códigos se generen
                setTimeout(function() {
                    // window.print(); // Comentado para que el usuario pueda revisar primero
                }, 1000);
            });
        });
    </script>
</body>
</html> 