@model SistemaContable.Models.ViewModels.ItemViewModel

@{
    ViewData["Title"] = "Editar Producto";
}

<div class="page-header">
    <div class="row align-items-center">
        <div class="col">
            <h1 class="page-title">@ViewData["Title"]</h1>
        </div>
        <div class="col-auto">
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Volver
            </a>
        </div>
    </div>
</div>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
    <input type="hidden" asp-for="Id" />
    
    <ul class="nav nav-tabs" id="itemTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="info-basica-tab" data-bs-toggle="tab" data-bs-target="#info-basica" type="button" role="tab">
                <i class="fas fa-info-circle"></i> Información Básica
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="compras-tab" data-bs-toggle="tab" data-bs-target="#compras" type="button" role="tab">
                <i class="fas fa-shopping-cart"></i> Compras
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="contabilidad-tab" data-bs-toggle="tab" data-bs-target="#contabilidad" type="button" role="tab">
                <i class="fas fa-calculator"></i> Contabilidad
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="tara-tab" data-bs-toggle="tab" data-bs-target="#tara" type="button" role="tab">
                <i class="fas fa-box"></i> Tara
            </button>
        </li>
    </ul>
    
    <div class="tab-content" id="itemTabContent">
        <div class="tab-pane fade show active" id="info-basica" role="tabpanel">
            @await Html.PartialAsync("_TabInfoBasica", Model)
        </div>
        <div class="tab-pane fade" id="compras" role="tabpanel">
            @await Html.PartialAsync("_TabCompras", Model)
        </div>
        <div class="tab-pane fade" id="contabilidad" role="tabpanel">
            @await Html.PartialAsync("_TabContabilidad", Model)
        </div>
        <div class="tab-pane fade" id="tara" role="tabpanel">
            @await Html.PartialAsync("_TabTaras", Model)
        </div>
    </div>
    
    <div class="mt-3">
        <button type="submit" class="btn btn-custom-primary" id="btnGuardar">
            <i class="fas fa-save"></i> Guardar Cambios
        </button>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-times"></i> Cancelar
        </a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js"></script>
    <script src="~/Scripts/contenedores.js"></script>
    <script src="~/js/items/proveedores_multiple.js"></script>
    <script src="~/js/items/init-edit.js"></script>

    <script>
        $(document).ready(function() {
            // For debugging: Log account fields and their values
            function debugAccountFields() {
                console.log("Debugging account fields:");
                [
                    "#CuentaVentasId", 
                    "#CuentaComprasInventariosId", 
                    "#CuentaCostoVentasGastosId", 
                    "#CuentaDescuentosId", 
                    "#CuentaDevolucionesId", 
                    "#CuentaAjustesId"
                ].forEach(selector => {
                    const $field = $(selector);
                    console.log(`Field ${selector}: Value=${$field.val()}, Text=${$field.find('option:selected').text()}`);
                });
            }
            
            // Log initial state
            setTimeout(debugAccountFields, 500);
            
            // Tab persistence
            var savedTab = localStorage.getItem('currentEditItemTab');
            if (savedTab) {
                $('#itemTab button[data-bs-target="' + savedTab + '"]').tab('show');
            }
            
            $('#itemTab button').on('shown.bs.tab', function (e) {
                var targetTab = $(e.target).data('bs-target');
                localStorage.setItem('currentEditItemTab', targetTab);
            });
            
            // Inicializar JsBarcode si hay código de barras
            if ($('#CodigoBarras').val()) {
                initializeBarcode();
            }
            
            function initializeBarcode() {
                var codigoBarras = $('#CodigoBarras').val();
                if (codigoBarras) {
                    JsBarcode("#barcode", codigoBarras, {
                        format: "CODE128",
                        lineColor: "#000",
                        width: 2,
                        height: 100,
                        displayValue: true
                    });
                    $('#barcode-container').removeClass('d-none');
                }
            }
            
            $('#btnGenerarCodigo').click(function () {
                $.ajax({
                    url: '@Url.Action("GenerarCodigoBarras", "Item")',
                    type: 'GET',
                    success: function (data) {
                        if (data.success) {
                            $('#CodigoBarras').val(data.codigo);
                            initializeBarcode();
                        } else {
                            Swal.fire('Error', 'No se pudo generar el código de barras', 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Error', 'Ocurrió un error al generar el código de barras', 'error');
                    }
                });
            });
            
            $('#btnImprimirCodigo').click(function (e) {
                e.preventDefault();
                if (!$('#CodigoBarras').val()) {
                    Swal.fire('Advertencia', 'Debe generar o ingresar un código de barras primero', 'warning');
                    return;
                }
                var win = window.open('', '_blank');
                var barcodeHtml = $('#barcode-container').html();
                var printHtml = '<html><head><title>Código de Barras</title></head><body>' + barcodeHtml + '</body></html>';
                win.document.write(printHtml);
                win.document.close();
                win.print();
            });
        });
    </script>
}