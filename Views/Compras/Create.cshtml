@model SistemaContable.Models.ViewModels.CompraViewModel

@{
    ViewData["Title"] = "Nueva Compra";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-6">
            <h1 class="h3 mb-0 text-gray-800">Nueva Compra</h1>
        </div>
        <div class="col-md-6 text-end">
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left me-1"></i> Volver al listado
            </a>
        </div>
    </div>

    <form id="compraForm" asp-action="Create" method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-light py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Informaci칩n de Compra</h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Numero" class="form-label"></label>
                                    <input asp-for="Numero" class="form-control" readonly />
                                    <span asp-validation-for="Numero" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Fecha" class="form-label"></label>
                                    <input asp-for="Fecha" class="form-control" type="date" />
                                    <span asp-validation-for="Fecha" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="ProveedorId" class="form-label"></label>
                                    <select asp-for="ProveedorId" asp-items="Model.Proveedores" class="form-select" required>
                                        <option value="">-- Seleccione --</option>
                                    </select>
                                    <span asp-validation-for="ProveedorId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="AlmacenId" class="form-label"></label>
                                    <select asp-for="AlmacenId" asp-items="Model.Almacenes" class="form-select">
                                        <option value="">-- Seleccione --</option>
                                    </select>
                                    <span asp-validation-for="AlmacenId" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Referencia" class="form-label"></label>
                                    <input asp-for="Referencia" class="form-control" />
                                    <span asp-validation-for="Referencia" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="PlazoPagoId" class="form-label"></label>
                                    <select asp-for="PlazoPagoId" asp-items="Model.PlazosPago" class="form-select" 
                                            onchange="actualizarFechaVencimiento(this.value)">
                                        <option value="">-- Seleccione --</option>
                                    </select>
                                    <span asp-validation-for="PlazoPagoId" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="FechaVencimiento" class="form-label"></label>
                                    <input asp-for="FechaVencimiento" class="form-control" type="date" />
                                    <span asp-validation-for="FechaVencimiento" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Estado" class="form-label"></label>
                                    <input asp-for="Estado" class="form-control" readonly />
                                    <span asp-validation-for="Estado" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Observaciones" class="form-label"></label>
                            <textarea asp-for="Observaciones" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Observaciones" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-light py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Resumen</h6>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal:</span>
                            <span id="resumen-subtotal">0.00</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Descuento:</span>
                            <span id="resumen-descuento">0.00</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Impuestos:</span>
                            <span id="resumen-impuestos">0.00</span>
                        </div>
                        <hr />
                        <div class="d-flex justify-content-between mb-2 fw-bold">
                            <span>Total:</span>
                            <span id="resumen-total">0.00</span>
                        </div>
                        
                        <input type="hidden" asp-for="Subtotal" id="subtotal-hidden" />
                        <input type="hidden" asp-for="Descuento" id="descuento-hidden" />
                        <input type="hidden" asp-for="Impuestos" id="impuestos-hidden" />
                        <input type="hidden" asp-for="Total" id="total-hidden" />
                        
                        <div class="d-grid gap-2 mt-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-1"></i> Guardar Compra
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Detalles de Compra -->
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-light py-3 d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-primary">Detalles de Compra</h6>
                <button type="button" class="btn btn-sm btn-primary" id="btnAgregarDetalle">
                    <i class="fas fa-plus me-1"></i> Agregar Producto
                </button>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table" id="tabla-detalles">
                        <thead class="bg-light">
                            <tr>
                                <th>Producto</th>
                                <th>Descripci칩n</th>
                                <th>Cantidad</th>
                                <th>Precio</th>
                                <th>Subtotal</th>
                                <th>Desc %</th>
                                <th>Desc $</th>
                                <th>Impuesto</th>
                                <th>Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Los detalles se agregar치n din치micamente -->
                        </tbody>
                    </table>
                </div>
                <div id="no-detalles" class="text-center py-4 text-muted">
                    <i class="fas fa-shopping-cart fa-2x mb-2"></i>
                    <p>Agregue productos a la compra.</p>
                </div>
            </div>
        </div>
    </form>
</div>

<!-- Template para nueva fila de detalle -->
<template id="template-detalle-fila">
    <tr class="fila-detalle">
        <td>
            <select class="form-select producto-select" name="Detalles[INDEX].ItemId" required
                    onchange="seleccionarProducto(this)">
                <option value="">-- Seleccione --</option>
                @foreach (var item in ViewBag.Items)
                {
                    <option value="@item.Id" data-codigo="@item.Codigo" data-uom="@item.UnidadMedidaInventarioId">@item.Nombre</option>
                }
            </select>
            <input type="hidden" name="Detalles[INDEX].ItemCodigo" class="item-codigo" />
        </td>
        <td>
            <input type="text" class="form-control descripcion" name="Detalles[INDEX].Descripcion" />
        </td>
        <td>
            <input type="number" class="form-control cantidad" name="Detalles[INDEX].Cantidad" value="1" min="0.0001" step="0.0001" required
                   onchange="calcularLinea(this)" onkeyup="calcularLinea(this)" />
        </td>
        <td>
            <input type="number" class="form-control precio" name="Detalles[INDEX].Precio" value="0" min="0.0001" step="0.0001" required
                   onchange="calcularLinea(this)" onkeyup="calcularLinea(this)" />
        </td>
        <td>
            <input type="number" class="form-control subtotal" name="Detalles[INDEX].Subtotal" value="0" readonly />
        </td>
        <td>
            <input type="number" class="form-control porc-descuento" name="Detalles[INDEX].PorcentajeDescuento" value="0" min="0" max="100" step="0.01"
                   onchange="calcularLinea(this)" onkeyup="calcularLinea(this)" />
        </td>
        <td>
            <input type="number" class="form-control monto-descuento" name="Detalles[INDEX].MontoDescuento" value="0" readonly />
        </td>
        <td>
            <select class="form-select impuesto-select" name="Detalles[INDEX].ImpuestoId" onchange="calcularLinea(this)">
                <option value="">Sin impuesto</option>
                @foreach (var impuesto in Model.ImpuestosSelectList)
                {
                    <option value="@impuesto.Value" data-porcentaje="@impuesto.Text.Split('%')[0].Trim()">@impuesto.Text</option>
                }
            </select>
            <input type="hidden" class="porc-impuesto" name="Detalles[INDEX].PorcentajeImpuesto" value="0" />
            <input type="hidden" class="monto-impuesto" name="Detalles[INDEX].MontoImpuesto" value="0" />
        </td>
        <td>
            <input type="number" class="form-control total" name="Detalles[INDEX].Total" value="0" readonly />
        </td>
        <td>
            <button type="button" class="btn btn-sm btn-outline-danger btn-eliminar-detalle">
                <i class="fas fa-trash"></i>
            </button>
            <input type="hidden" name="Detalles[INDEX].Id" value="0" />
            <input type="hidden" name="Detalles[INDEX].CompraId" value="0" />
            <input type="hidden" class="unidad-medida" name="Detalles[INDEX].UnidadMedidaId" value="" />
            <input type="hidden" name="Detalles[INDEX].FactorConversion" value="1" />
            <input type="hidden" name="Detalles[INDEX].EmpresaId" value="@Model.EmpresaId" />
        </td>
    </tr>
</template>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Variables globales
        let detalleCount = 0;
        const plazosPago = @Html.Raw(Json.Serialize(Model.PlazosPago.Select(p => new { id = p.Value, dias = int.TryParse(p.Text.Split(" ")[0], out int dias) ? dias : 0 })));
        
        $(document).ready(function () {
            // Inicializaci칩n
            $('#btnAgregarDetalle').click(agregarDetalleVacio);
            
            // Agregar una fila para comenzar
            agregarDetalleVacio();
            
            // Delegaci칩n de eventos para bot칩n eliminar
            $('#tabla-detalles').on('click', '.btn-eliminar-detalle', function () {
                $(this).closest('tr').remove();
                actualizarVisibilidadTabla();
                recalcularTotales();
            });
            
            // Actualizar fecha de vencimiento al cambiar la fecha de compra
            $('#Fecha').change(function() {
                const plazoPagoId = $('#PlazoPagoId').val();
                if (plazoPagoId) {
                    actualizarFechaVencimiento(plazoPagoId);
                }
            });
        });
        
        // Funci칩n para agregar una nueva fila de detalle
        function agregarDetalleVacio() {
            const template = document.getElementById('template-detalle-fila');
            const tbody = document.querySelector('#tabla-detalles tbody');
            
            const clone = document.importNode(template.content, true);
            
            // Reemplazar INDEX con el contador actual
            const elements = clone.querySelectorAll('[name*="INDEX"]');
            elements.forEach(el => {
                el.name = el.name.replace('INDEX', detalleCount);
            });
            
            tbody.appendChild(clone);
            detalleCount++;
            
            actualizarVisibilidadTabla();
        }
        
        // Mostrar/ocultar mensaje de "no hay detalles"
        function actualizarVisibilidadTabla() {
            const hayDetalles = $('#tabla-detalles tbody tr').length > 0;
            if (hayDetalles) {
                $('#no-detalles').hide();
                $('#tabla-detalles').show();
            } else {
                $('#no-detalles').show();
                $('#tabla-detalles').hide();
            }
        }
        
        // Funci칩n para seleccionar un producto
        function seleccionarProducto(select) {
            const itemId = $(select).val();
            if (!itemId) return;
            
            const proveedorId = $('#ProveedorId').val();
            const fila = $(select).closest('tr');
            
            // Obtener informaci칩n del producto mediante AJAX
            $.get(`/Compras/GetItemInfo?itemId=${itemId}&proveedorId=${proveedorId}`, function(data) {
                fila.find('.descripcion').val(data.descripcion);
                fila.find('.precio').val(data.precioCompra);
                fila.find('.item-codigo').val(data.codigo);
                fila.find('.unidad-medida').val(data.unidadMedidaId);
                
                // Si el producto tiene un impuesto predeterminado, seleccionarlo
                if (data.impuestoId) {
                    fila.find('.impuesto-select').val(data.impuestoId);
                }
                
                calcularLinea(select);
            });
        }
        
        // Calcular importes de una l칤nea
        function calcularLinea(elemento) {
            const fila = $(elemento).closest('tr');
            
            const cantidad = parseFloat(fila.find('.cantidad').val()) || 0;
            const precio = parseFloat(fila.find('.precio').val()) || 0;
            const porcDescuento = parseFloat(fila.find('.porc-descuento').val()) || 0;
            
            // Calcular subtotal
            const subtotal = cantidad * precio;
            fila.find('.subtotal').val(subtotal.toFixed(4));
            
            // Calcular descuento
            const montoDescuento = subtotal * (porcDescuento / 100);
            fila.find('.monto-descuento').val(montoDescuento.toFixed(4));
            
            // Calcular impuesto
            const baseImponible = subtotal - montoDescuento;
            const impuestoSelect = fila.find('.impuesto-select');
            let porcImpuesto = 0;
            
            if (impuestoSelect.val()) {
                const impuestoOption = impuestoSelect.find('option:selected');
                porcImpuesto = parseFloat(impuestoOption.data('porcentaje')) || 0;
            }
            
            fila.find('.porc-impuesto').val(porcImpuesto);
            
            const montoImpuesto = baseImponible * (porcImpuesto / 100);
            fila.find('.monto-impuesto').val(montoImpuesto.toFixed(4));
            
            // Calcular total
            const total = baseImponible + montoImpuesto;
            fila.find('.total').val(total.toFixed(4));
            
            // Recalcular totales generales
            recalcularTotales();
        }
        
        // Recalcular los totales generales de la compra
        function recalcularTotales() {
            let subtotal = 0;
            let descuento = 0;
            let impuestos = 0;
            let total = 0;
            
            // Sumar valores de todas las filas
            $('.fila-detalle').each(function() {
                subtotal += parseFloat($(this).find('.subtotal').val()) || 0;
                descuento += parseFloat($(this).find('.monto-descuento').val()) || 0;
                impuestos += parseFloat($(this).find('.monto-impuesto').val()) || 0;
                total += parseFloat($(this).find('.total').val()) || 0;
            });
            
            // Actualizar resumen
            $('#resumen-subtotal').text(subtotal.toFixed(2));
            $('#resumen-descuento').text(descuento.toFixed(2));
            $('#resumen-impuestos').text(impuestos.toFixed(2));
            $('#resumen-total').text(total.toFixed(2));
            
            // Actualizar campos ocultos
            $('#subtotal-hidden').val(subtotal.toFixed(2));
            $('#descuento-hidden').val(descuento.toFixed(2));
            $('#impuestos-hidden').val(impuestos.toFixed(2));
            $('#total-hidden').val(total.toFixed(2));
        }
        
        // Actualizar fecha de vencimiento seg칰n plazo de pago
        function actualizarFechaVencimiento(plazoPagoId) {
            if (!plazoPagoId) return;
            
            const plazoPago = plazosPago.find(p => p.id == plazoPagoId);
            if (!plazoPago) return;
            
            const fechaCompra = new Date($('#Fecha').val());
            if (isNaN(fechaCompra)) return;
            
            // Si es vencimiento manual, no hacer nada
            if (plazoPago.dias === null || plazoPago.dias === undefined) return;
            
            // Calcular fecha de vencimiento
            const fechaVencimiento = new Date(fechaCompra);
            fechaVencimiento.setDate(fechaVencimiento.getDate() + plazoPago.dias);
            
            // Formatear fecha como YYYY-MM-DD para el input date
            const yyyy = fechaVencimiento.getFullYear();
            const mm = String(fechaVencimiento.getMonth() + 1).padStart(2, '0');
            const dd = String(fechaVencimiento.getDate()).padStart(2, '0');
            
            $('#FechaVencimiento').val(`${yyyy}-${mm}-${dd}`);
        }
    </script>
} 